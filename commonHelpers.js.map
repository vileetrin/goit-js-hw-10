{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst input = document.querySelector('#datetime-picker');\nconst button = document.querySelector('button');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    const currentTime = new Date();\n    if (userSelectedDate <= currentTime) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      button.disabled = true;\n    } else {\n      button.disabled = false;\n    }\n  },\n};\n\nconst fp = flatpickr(input, options);\n\nlet userSelectedDate = null;\nlet countdownInterval = null;\n\nbutton.addEventListener('click', function() {\n\n  button.disabled = true;\n  input.disabled = true;\n\n  countdownInterval = setInterval(updateTimer, 1000);\n  updateTimer();\n});\n\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\n\nfunction updateTimer() {\n  const currentTime = new Date();\n  const timeDifference = userSelectedDate - currentTime;\n\n  if (timeDifference <= 0) {\n    clearInterval(countdownInterval);\n    countdownInterval = null;\n    button.disabled = false;\n    input.disabled = false;\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(timeDifference);\n\n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n}\n\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["input","button","options","selectedDates","userSelectedDate","iziToast","flatpickr","countdownInterval","updateTimer","addLeadingZero","value","timeDifference","days","hours","minutes","seconds","convertMs","ms"],"mappings":"2GAKA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAS,SAAS,cAAc,QAAQ,EAExCC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBC,EAAmBD,EAAc,CAAC,EAE9BC,GADgB,IAAI,MAEtBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDJ,EAAO,SAAW,IAElBA,EAAO,SAAW,EAErB,CACH,EAEWK,EAAUN,EAAOE,CAAO,EAEnC,IAAIE,EAAmB,KACnBG,EAAoB,KAExBN,EAAO,iBAAiB,QAAS,UAAW,CAE1CA,EAAO,SAAW,GAClBD,EAAM,SAAW,GAEjBO,EAAoB,YAAYC,EAAa,GAAI,EACjDA,GACF,CAAC,EAGD,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAGA,SAASF,GAAc,CAErB,MAAMG,EAAiBP,EADH,IAAI,KAGxB,GAAIO,GAAkB,EAAG,CACvB,cAAcJ,CAAiB,EAC/BA,EAAoB,KACpBN,EAAO,SAAW,GAClBD,EAAM,SAAW,GACjB,MACD,CAED,KAAM,CAAE,KAAAY,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAc,EAElE,SAAS,cAAc,aAAa,EAAE,YAAcF,EAAeG,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcH,EAAeI,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcJ,EAAeK,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcL,EAAeM,CAAO,CAC/E,CAGA,SAASC,EAAUC,EAAI,CAMrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}